/*
 * MIT License
 *
 * Copyright (c) 2022-2023 freemine <freemine@yeah.net>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef _iconv_wrapper_h_
#define _iconv_wrapper_h_

#include "macros.h"

#include <stdio.h>

#cmakedefine USE_WIN_ICONV

EXTERN_C_BEGIN

#ifdef _WIN32                       /* { */
#ifdef USE_WIN_ICONV         /* { */
#include <iconv.h>
#else                        /* }{ */
#include <stddef.h>
typedef struct iconv_s          *iconv_t;
iconv_t iconv_open(const char *tocode, const char *fromcode) FA_HIDDEN;
int iconv_close(iconv_t cd) FA_HIDDEN;
size_t iconv(iconv_t cd, char **inbuf, size_t *inbytesleft, char **outbuf, size_t *outbytesleft) FA_HIDDEN;
#endif                       /* } */
#else                               /* }{ */
#include <iconv.h>
#endif                              /* } */

static inline void dump_buf(FILE *fd, const char *s, size_t n, const char *open, const char *close)
{
  if (open) fprintf(fd, "%s", open);
  for (size_t i = 0; i < n; ++i) {
    unsigned char c = (unsigned char)s[i];
    fprintf(fd, "%02x", c);
  }
  if (close)   fprintf(fd, "%s", close);
}

static inline void dump_for_debug(const char *s, size_t n)
{
  dump_buf(stderr, s, n, "====================\n", "\n====================\n");
}

EXTERN_C_END

#endif // xiconv_wrapper_h_

